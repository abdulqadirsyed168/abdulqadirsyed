Q. WHAT IS FILE SYSTEM ?
Ans. FILE SYSTEM IS USE TO READ AND WRITE DATA INTO HARD DISK
EXAMPLE : IF WE HAVE INSTALLED WINDOWS SYSTEM AND THE OS INSTALLED (NTFS) "New Technology File System", NTFS was first introduced in 1993
        : IF WE HAVE INSTALLED LINUX SYSTEM AND THE OS INSTALLED (EXT) “Extended File System”, 
        : IF WE HAVE INSTALLED MAC SYSTEM AND THE OS INSTALLED (HFS) "Hierarchical File System " 
        : IF WE HAVE MOBILE THEY ALSO HAVE OWN FILE SYSTEM
        
Q. WHAT IS BLOCK ?
ANS. * IF WE NEED TO STORE 1GB OF DATA IN ANY MACHINE 
     * 1GB OF DATA WILL GET DIVIED INTO SMALL SMALL CHUKS AS BLOCKS 
     Q. WHY USING SMALL SMALL CHUNKS?
     Ans. TO SPEEDUP READ AND WRITE OPERATIONS
     BLOCK FOR NTFS - 16KB
     BLOCK FOR EXT - 512KB
     BLOCK FOR HDFS - 128MB HIGHLY CONFIGURABLE ACCORDING TO VOLUME OF DATA
     
 Q. CLIENT AND SERVER ?
 Ans. CLIENT SEND REQUEST
      SERVER SEND RESPONSE TO CLIENT
      EX : FACEBOOK LOG IN TO ANY SYSTEM(CLIENT) TO SERVER AND SERVER GIVING RESPONSE TO CLIENT
      
 Q. TYPES OF FILESYSTEM ?
 Ans. # STAND ALONE FILESYSTEM :- WHAT EVER DATA GETTING STORE IN MACHINE AND IT WILL NOT SHARE ACROSS OTHER MACHINES THEN ITS STAND ALONE FILESYSTEM
      # DISTRIBUTED FILESYSTEM :- WHAT EVER DATA GETTING STORE IN MACHINE AND IT WILL BE SHARE ACROSS TO OTHER MACHNIES THEN ITS DISTRIBUTED FILESYSTEM
      
Q. DISTRIBUTED TYPES ?
Ans # MASTER AND SLAVE :- HADOOP,SPARK,HBASE [SPOF-SINGLE POINT OF FAILURE - SPOC-SINGLE POINT OF COMMUNICATION]
    # PEER TO PEER :- CASSANDRA
    
Q. WHAT IS PROCESS :- POGRAMMING IN EXECUTION

Q. CLUSTER - GROUP OF NODES
   NODE - INDIVIDUAL PHYSICAL OR VIRTUAL MACHINE
   
Q. API- APPLICATION POGRAMM INTERFACE - A PROCESS WHICH PREOCCED YOUR REQUEST
   EX:- WANT TO SEE MOVIE MEDIA PLAYER IS API
   


*2002 Goggle has introduced GFS File  system to read and write data from disk
*Before reading data the data we get  distributed across the nodes
*2004 Goggle has released another paper  called GMR this is for processing
*2005-2006 DOUG CUTTING has introduced  hadoop
*Hadoop- Comes HDFS and MR
*Hadoop Framework- Comes HDFS MR and  diffrent companies and different  individual and communities has improve  Hadoop
*HIVE was invented by FACEBOOK to improve Performance of Mapreduce in SQL language
*PIG was invented by YAHOOH and they dont  want to interact with Mapreduce with any  kind pogramming language so they will use  Scripting language PIGLATIN LANGUAGE.
*Internaly HIVE and PIG will run as  Mapreduce in java
*SQOOP was invented by group of companies
 SQOOP will do Import and Export of data  from hadoop to RDBMS and RDBMS to hadoop
*SQOOP will internaly run on java it will   some SQOOP commands
*OOZIE is a scheduler was invented by  YAHOOH 
*Map reduce is an upstraction of  HIVE,PIG,SQOOP,OOZIE
*HBASE was invented by FACEBOOK its an NOSQLdatabase 
*MAHOOT its used by DATASCIENCE
*FLUME is to connect any kind of data  bases,urls,twitter,facebook only Import  data from database to hadoop
*LOSELY COUPLED FRAMEWORK
*TIGHTLY COUPLED FRAMEWORK
*HDFS and HBASE is Storagepart
*MR,HIVE,PIG is Processing data
*SQOOP,FLUME is Pipeline of data
*OOZIE is scheduler
*MAHOOT is data science related

# HADOOP ARCHITECTURE 1.X :-

* Name Node : Name node always try to keep metainformation and it always holds memory mapping. 
* Data Node : It always holds actual data and process that data. 
* Job Tracker : It control the overall execution in cluster. Task Tracker : It may runs on individual machine and control individual processing.

* Combination of name node and job tracker is called Master Node. Combination of task tracer and data node is called Slave Node.


# CheckPoint : Combining the edit log and old FS_Images is called checkpoint. ALWAYS HAPPEN IN SECONDARY NAME NODE

# Name Node : it have Primary name node and Secondary name node

* In Primary name node it will have Fs_image that will aware of all Data node storage information.


Secondary Name node : it will have EDIT file or EDIT Log information of wht kind of operations are been performed after 0 to 20 sec , 
and it will also have old FS_IMAGE_0 , when ever it will combine with two EDIT file and FS_IMAGE_0 it will send to primary name node. AND PRIMARY WILL START FS_IMAGE
FROM FS_IMAGE_20

If Primary name node will go down then will have secondary FS_IMAGES of primary one.
If secondary name will go down then secondary will have multiple replicas.

# HADOOP ARCHITECTURE 2.X,3.X :-

IN HADOOP 2.X MAJORILY TWO THING THEY HAVE 
* RESOURCE MANAGER -  JOB TRACKER
* NODE MANAGER -TASK TRACKER    CALLED YARN YET ANOTHER RSOURCE NEGOTATIOR

1. WHEN EVER JOB GOING TO SUBMIT FROM RESOURCE MANAGER TO NODE MANAGER THEN NODE MANAGER WILL CREATE AN "APPLICATION MASTER" FOR EVER SINGLE JOB THEN AFTER 
 "APPLICATION MASTER" WILL PING BACK TO RESOURCE MANAGER "OKAY I HAVE ALLOCATED THE REQUIRED RESOURCE" 
# "APPLICATION MASTER CREATE ONE KIND OF JOB ID FOR EVERY INDIVIDUAL JOBS TO BE EXECUTED"
2. IF THE RESOURCE CAN ABLE TO GET IN ONE NODE MANAGER IT SELF THEN IT WILL EXECUTE JOB AND THE APPLICATION MASTER WILL GET DESTROYED
UNTIL HERE 2.X ARCHITECTURE


3. IF THE RESOURCE HAVE BEEN SPREAD ACROSS NODES THEN APPLICATION MASTER WILL PING TO RESOURCE MANAGER TO CREATE AN VIRTUAL SPACE CALLED "CONTAINER"
4. Container : Combination of combined resource from different nodes.
5. YARN HAS INTRODUCED IN HADOOP 3.X ARCHITECTURE

************************************** MAP REDUCE ************************************* 
# MAP REDUCE :- PROCESSING FRAMEWORK, OR BATCH PROCESSING FRAME WORK, OR MASSIVE PARALLEL PROCESSING FRAME WORK
# SPRAK :- ITS ALSO FRAMEWORK

#MAP :- PARALLELISM
#REDUCE :- GROUPING THE PARALLELISM

#MAP INPUT :- MAP CAN ABLE TO GET DATA DEFAULT FROM HDFS EITHEIR IT CAN TAKE IT FROM HDFS,RDMS,ANY DATABASES

# LANGUAGE USE IN MAP REDUCE:- JAVA(DEFAULT) YOU CAN CHANGE IT.

# ADVANTAGES OF MAP_REDUCE OR SPARK :-
1 CLUSTER MONITORING
2 RESOURCE ALLOCATION
3 CLUSTER MANAGEMENT
4 SCHEDULING
5 EXECUTION

Q. MAIN USE OF MR:-
Ans. PARALLELISM 

Q. ABSTRACTION OF MR:-
Ans. HIVE,PIG,SQOOP,OOZIE ALL THIS COMPONENTS CAN ABLE TO WORK ON TOP OF HADOOP AND IT CAN ALSO WORK ON TOP OF SPARK AS WELL JUST REPLACING "MR TO SPARK"

MAP:- MAP WILL CAN TAKE INPUT FROM EITHEIR HDFS,RDBMS,NOSQL
NO OF MAPERS WILL BE = NO OF BLOCK BUT IT CONFIGURABLE EX:- 3BLOCKS WE HAVE 6MAPPERS OR 3BLOCKS WE CAN HAVE 3MAPPERS

REDUCER:- REDUCER OUTPUT WILL BE THE MAPPER OUTPUT AND IT CAN GIVE OUTPUT TO EITHEIR HDFS,RDBMS,NOSQL 
NO OF REDUCER WILL BE = WE CAN ABLE TO DECIDE IT.










    
    
    
 
