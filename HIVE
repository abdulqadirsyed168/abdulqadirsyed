* Hive is query engine
* Hive is an vehical which upon running on  MapReduce engine OR Spark engine
* Hive is an upstraction of MapReduce
* Hive internaly use MapReduce Instead of  Java it using SQL
* Spark is just replacement of MapReduce  not entire Hadoop system
* Hive have Meta data information

# Meta data Example:
While we create Table Hive will have only schema information not a data in the table
How many cloumns weather it have index or not.

Q. Where will Hive Metadata information is   store?
Ans. Hive will store Metadata infromation in  RDBMS,ORACLE,MYSQL...etc it called as REMOTE METASTORE MECHANISM.

*Hive internally have DURBY which stores  the Metadata Information and it called as  EMBADED METASTORE MECHANISM.

EMBADED METASTORE-
Mostly embaded metastore will not use
Becauses it will save Durby metastore to an each node

Q. WHY WE ARE NOT USING DURBY IN HIVE ?
Ans SUPPOSE WE HAVE FOUR NODES EACH NODE WILL HAVE THEIR OWN DURBY DATABASE
    IF WE NEED TO CREATE TABLE WITH NAME OF TEST AND OUT OF FOUR NODE ONE NODE HAS CREATED TABLE AND SCHEMA HAS BEEN INSTALLED IN NODE OF THE DURBY
    IF WE NEED TO INSERT RECORDS TO THAT TABLE THEN OUT OF FOUR NODES FIRST NODE HAVE PICKUP THE INSERT COMMAND AND IT WILL GIVE AN ERROR TABLE NOT FOUND
    SO IN BETWEEN THE NODES OF INDIVIDUAL DURBY WILL NOT SHARE THE META DATA INFORMATION ACROSS THE NODES 
    SO DURBY DATABASE WILL NOT HIGH RECOMMANDABLE. 
    
EXTERNAL DB FOR HIVE INSTEAD OF DERBY IN HIVE
# METADATA BACKUP
# MORE MULTIPLE CONCURRENT CONNECTIONS

# ACID :- TABLE WHICH ALLOWS YOU TO INSERT,UPDATE,DELETE

# ACID IN HIVE:-
  FROM 0.14 VERSION OF HIVE IT WILL ONLY SUPPORT OLAP WHICH MEANS ONLY INSERTS NO UPDATES AND DELETES
  NOW CURRENT VERSION HIVE WILL ALLOW ACID PROPERTIES IT CAN SUPPORT OLTP
  
# TO CREATE ACID TABLE IN HIVE:-
  1. TABLE SHOULD BE CREATED INTERNAL
  2. TABLE MUST BE BUCKET
  3. TABLE FILE FORMAT MUST BE ORC
  4. IN TBLPROPERTIES MUST BE ENABLE 'TRANSACTIONAL = TRUE'

# INTERNAL TABLE AND EXTERNAL TABLE IN HIVE :-

# INTERNAL TABLE :-
  1. WHILE CREATING INTERNAL TABLE IN HIVE IT WILL STORE METADATA LIKE SCHEMA WILL BE STORED IN HIVE
  2. THE ACTUAL DATA WILL BE GET STORED IN HIVE AS WELL 
  3. IF WE DROP THE INTERNAL TABLE THE TABLE AND SCHEMA GET VANISHIED FROM HIVE
  EXAMPLE:-
  create table department_data #INTERNAL TABLES                                                                                                           
    > (                                                                                                                                       
    > dept_id int,                                                                                                                            
    > dept_name string,                                                                                                                       
    > manager_id int,                                                                                                                         
    > salary int)                                                                                                                             
    > row format delimited                                                                                                                    
    > fields terminated by ','
    
   # For data load from local
load data local inpath 'file:///tmp/hive_class/depart_data.csv' into table department_data; 

# Load data from hdfs location
load data inpath '/tmp/hive_data_class_2/' into table department_data_from_hdfs;

  
# EXTERNAL TABLE :-
  1. WHILE CREATING EXTERNAL TABLE IN HIVE IT WILL ALSO STORE METADATA OR SCHEMA WILL BE STORED IN HIVE
  2. THE ACTUAL DATA WILL NOT GET STORED IN HIVE INSTEAD OF THAT THE ACTUAL DATA WILL BE POINTING TO DATA LOCATION
  3. IF WE DROP THE EXTERNAL TABLE THE TABLE WILL NOT BE REMOVED FROM HADOOP.
  
 EXAMPLE:- 
create external table department_data_external                                                                                          
    > (                                                                                                                                       
    > dept_id int,                                                                                                                            
    > dept_name string,                                                                                                                       
    > manager_id int,                                                                                                                         
    > salary int                                                                                                                              
    > )                                                                                                                                       
    > row format delimited                                                                                                                    
    > fields terminated by ','                                                                                                                
    > location '/tmp/hive_data_class_2/';
    
    
 # PARTITION IN HIVE:-
 1. STATIC PARTITION
 2. DYNAMIC PARTITION
 BY DEFAULT HIVE WILL FOLLOW STATIC PARTITION
 IF HIVE WILL NOT STATIC PARTITON THEN NEED TO ENABLE PROPERTIE SET hive.mapred.mode = strict
 
 1. STATIC PARTITON :- IN STATIC PARTION WE NEED TO SPECIFY TO HIVE WHICH COLUMN VALUE SHOULD NEED TO GET PARTITION ONLY ONE VALUE COLUMN LIKE "country = USA"
 
 2. DYNAMIC PARTITION :- IN DYNAMIC PARTITON HIVE WILL TAKEN CARE OF PARTITION JUST NEED TO SPECIFY COLUMN 
 TO DO DYNAMIC PARTITION MUST NEED TO ENABLE THIS PROPERTIES
 SET hive.exec.dynamic.partition = true;
 SET hive.exec.dynamic.partition.mode = nonstrict;
 SET hive.enforce.bucketing = true;
 
 # JOINS IN HIVE:-
 1. REDUCE SIDE JOIN
 2. MAP SIDE JOIN(BROAD CAST JOIN)
 3. BUCKET MAP JOIN
 4. SORT MERGE BUCKET MAP JOIN(SMBM)
 
 1. REDUCE SIDE JOIN :-
                        IN REDUCE SIDE JOIN IT WILL HAVE ONLY ONE REDUCER AND IT WILL BE USE ONLY FOR TWO SMALL DATASETS
                        SUPPOSE IF WE NEED TO DO INNER JOIN THE DATA SETS WOULD BE SMALLER AND WE NEED TO ENABLE PROPERTIE
                        SET hive.auto.convert.join=false;
                        
                        
 2. MAP SIDE JOIN :-
                       
 
 





 
